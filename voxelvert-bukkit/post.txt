TITLE:        VoxelVert Reloaded | Ingame 3D-Converter, File Browser and more
VERSION:      R1.0
DESCRIPTION:  Browse and edit files in game and onvert between more than 13 3D-formats.
PRICE:        10 EUR
PAYPAL:       janschultke.f@gmail.com
CONTRIBUTORS: Grian Network, Arcaniax



[IMG]https://i.imgur.com/KnImJll.png[/IMG]
[B]External Dependencies:[/B] WorldEdit (soft dependency since R1.5pre)

[B][COLOR=#336600][SIZE=5]13th of December marks VoxelVert's first anniversary. The plugin is 50% OFF for a limited time![/SIZE][/COLOR][/B]

[IMG]https://i.imgur.com/AVmDFOC.png[/IMG]
VoxelVert Reloaded is a complete revamp of the plugin VoxelVert. Multiple months of work went into this project and I can proudly say that this is the most significant and finest plugin I have ever developed.

This plugin was designed with builders, model creators and developers in mind and provides features for all these groups:
[LIST]
[*][B]Builders[/B] can store schematics as files and organize them in a file browser (and will be able to share them with each other).
[*][B]Model creators[/B] can collaborate on models by building them as Minecraft blocks in game. The wide range of supported 3D-formats allows quick integration into software such as Cubik Studio.
[*][B]Developers[/B] can access the server's files using the in-game file browser. Many features for developers such as a text file viewer are planned.
[/LIST]
With VoxelVert, you can edit and browse files on your server ingame. It also allows you to convert between more than 13 different file formats:
[LIST]
[*]Minecraft Blocks
[*]Minecraft Models (json)
[*]Minecraft Structures
[*]Schematic Files (schematic)
[*]Images (jpeg, png, bmp, gif, ico)
[*]Qubicle Exchange Format (qef)
[*]Qubicle Binary (qb)
[*]Standard Tessellation Language (stl) (binary and ASCII version)
[*]Wavefront Model (obj)
[*]Wavefront Material Library (mtl)
[/LIST]
Since R1.4.4, VoxelVert can be used to [B]upload files to your server and download files without FTP[/B].

Do you have more questions? Do you want to report a bug quickly? Join my plugin support server at [B]https://discord.gg/ZXwn3eg[/B] or contact me directly on Discord at [B]Eisenwave#7675[/B].


[IMG]https://i.imgur.com/op4hfi3.png[/IMG]
[B]#1: How to convert a file with the VoxelVert file browser[/B]
[SPOILER]
[IMG]https://i.imgur.com/wwndGcg.png[/IMG]
1. We open our file browser using /vv and look for our file.

[IMG]https://i.imgur.com/6CmF0h6.png[/IMG]
2. We select our file by clicking on it and click on the "Open" button in the bottom-left corner.

[IMG]https://i.imgur.com/A1QhSpz.png[/IMG]
3. We select the format to which we want to convert. This will reveal a few options for converting which we can configure. We can also press the red button in the bottom-left corner to return to the file browser.

[IMG]https://i.imgur.com/NYU35Qq.png[/IMG]
4. We Select the options we like and press on the green "Confirm" button. In this example we selected the "up" direction (compass), we enabled verbosity (jukebox) and didn't enable image cropping (shears).

Once we click on the "Confirm" button, we won't be able to change the options anymore. Also, the bottom row will be replaced with a progress bar.

[IMG]https://i.imgur.com/vp6GV7x.png[/IMG]
5. VoxelVert is now finished converting our file. At this point we can click on the button bar below to return.

Note that VoxelVert picks a new, unique output file name for us. However, we can change this name to whatever we like later.
[/SPOILER]


[IMG]https://i.imgur.com/Nw4idw8.png[/IMG]
VoxelVert also comes with a standalone command line tool! This command line tool is a seperate .jar file which does not need Spigot to run. To run the command line tool, you will need nothing but Java 1.8.

Being able to run VoxelVert's conversions without an active Spigot server was an often requested feature in its previous version. Now this is possible.

[IMG]https://i.imgur.com/TlfMbvA.png[/IMG]
In this example, the user is converting the file "something.schematic" in their "schem" folder. The selected options are:
[LIST]
[*][B]-v[/B] to enable verbosity
[*][B]-r[/B] to enable file replacement
[*][B]-d up[/B] to render the schematic from its upside
[/LIST]
For a full documentation of all the options, take a look at the [B]/c[/B] command below, or run the jar without arguments. This will show you a help page.

[IMG]https://i.imgur.com/t5iaNHe.png[/IMG]
[B][SIZE=5]Completed Additonal Features[/SIZE][/B]
[LIST]
[*]direct conversions from schematics to images
[*]direct conversion from wavefront to schematics
[*]advanced media type detection for the file browser, basic file attributes
[*]1.13+ support
[*]structure block file format support
[*]custom texture pack support for block conversions
[*]ASCII-STL support
[*]downloading files directly from your file browser
[*]uploading files via web page
[*]Discord plugin support server
[/LIST]
[B][SIZE=5]Additional Features in Development[/SIZE][/B]
[LIST]
[*]sharing files with WorldEdit for easier schematic managment
[*]sharing files with other players on the server
[*]sharing files with a per-world shared directory
[*]folders for the file browser

[*]working directory for the VoxelVert commands and the file browser
[/LIST]
[B][SIZE=5]Planned Features[/SIZE][/B]
[LIST]
[*]text file viewer for the file browser
[*]automatic localization per player
[*]German localization
[*]more detailed permissions for each file format
[*]file count and storage space limits for non-operator players
[*]smart protection against converting too complex files (such as billion-block schematics)
[*][B]developer mode[/B] for the file browser which allows you to view any directory on the server and comes with more developer-oriented features
[/LIST]
At least one of features on this list will be added to VoxelVert each 2 weeks. Prepare for a rapidly improving plugin. ;)

[IMG]https://i.imgur.com/Gpft7Cw.png[/IMG]
[FONT=Courier New][B]/probe-block[/B][/FONT]
[SPOILER]
[B][FONT=Arial]Permission:[/FONT][/B][FONT=Courier New]vv.command.probe-block[/FONT]
Lists files in your file browser directory.
[/SPOILER]

[B][FONT=Courier New]/voxelvert-list[/FONT][/B]
[SPOILER]
[B]Alias: [/B][FONT=Courier New]/vv-ls[/FONT]
[B]Permission:[/B] [FONT=Courier New]vv.command.voxelvert-list[/FONT]

Lists files in your file browser directory.
[/SPOILER]

[FONT=Courier New][B]/voxelvert-remove <file>[/B][/FONT]
[SPOILER]
[B]Alias: [/B][FONT=Courier New]/vv-rm[/FONT]
[B]Permission:[/B] [FONT=Courier New]vv.command.voxelvert-remove[/FONT]

Removes a file from your directory. Be careful, as you can't undo this action.
[/SPOILER]

[B][FONT=Courier New]/voxelvert-copy <source file> <target file>[/FONT][/B]
[SPOILER]
[B]Alias: [/B][FONT=Courier New]/vv-cp[/FONT]
[B]Permission:[/B] [FONT=Courier New]vv.command.voxelvert-copy[/FONT]

Copies a source file to to a target file. Be careful, as this could replace existing files.
[/SPOILER]

[B][FONT=Courier New]/voxelvert-move <source file> <target file>[/FONT][/B]
[SPOILER]
[B]Alias: [/B][FONT=Courier New]/vv-mv[/FONT]
[B]Permission:[/B] [FONT=Courier New]vv.command.voxelvert-move[/FONT]

Moves a source file to a target file. This can also be used for renaming files.
[/SPOILER]

[B][FONT=Courier New]/voxelvert OR /voxelvert files[/FONT][/B]
[SPOILER]
[B]Alias: [/B][FONT=Courier New]/vv[/FONT]
[B]Permission:[/B] [FONT=Courier New]vv.command.voxelvert[/FONT]

Opens the VoxelVert file browser GUI.
[/SPOILER]

[B][FONT=Courier New]/voxelvert convert <file> [format][/FONT][/B]
[SPOILER]
[B]Alias: [/B][FONT=Courier New]/vv[/FONT]
[B]Permission:[/B] [FONT=Courier New]vv.command.voxelvert[/FONT]

Opens a conversion GUI for the provided file path. VoxelVert will try to determine the type of the file using its extension. If it succeeds, you doN't need to provide the name of the format.

For instance, if you provide a file named "my_file.schematic", VoxelVert won't ask you for the format because it can tell by the the "schematic" extension.
[/SPOILER]

[B][FONT=Courier New]/voxelvert converter (name|priority|restart|state)[/FONT][/B]
[SPOILER]
Displays information about the converter thread, including its name, its state, its priority. The restart option interrupts the thread and starts it up again, which is useful in situations where it got stuck on an extremely long conversion.
[/SPOILER]

[B][FONT=Courier New]/voxelvert reload[/FONT][/B]
[SPOILER]
Reloads the plugin.
[/SPOILER]

[B][FONT=Courier New]/voxelvert status[/FONT][/B]
[SPOILER]
Displays some information about the status of the plugin, such as the language used by it and the status of the converter thread.
[/SPOILER]

[B][FONT=Courier New]/voxelvert upload[/FONT][/B]
[SPOILER]
Gives you a one-time use link with which you can upload a file to your file browser. (no FTP server required)
[/SPOILER]

[B][FONT=Courier New]/voxelvert version[/FONT][/B]
[SPOILER]
Displays the current VoxelVert version.
[/SPOILER]

[B][FONT=Courier New]/convert <input file> <output file> [options][/FONT][/B]
[SPOILER]
[B]Alias: [/B][FONT=Courier New]/c[/FONT]
[B]Permission:[/B] [FONT=Courier New]vv.command.convert[/FONT]

Converts an input file to the output file with options, if necessary. The options vary depending on what format you are converting from and to. However, these options can always be used:
[B]
-i <input format>: [/B]Specifies the input format if it can't be derived from the file extension
[B]-o <output format>: [/B]Specifies the input format if it can't be derived from the file extension
[B]-v <verbose>: [/B]request extra information about the conversion

[B]Examples:[/B]
[FONT=Courier New]/c house.schematic house.obj -v[/FONT]
Converts the "house.schematic" file into an OBJ-Model named "house.obj" with extra debug messages.

[FONT=Courier New]/c house house_up.png -i schematic -d up[/FONT]
Converts the file named "house" with the format "schematic" into an bird eye's view image with the name "house.png".
[/SPOILER]


[IMG]https://i.imgur.com/7UJEsJ9.png[/IMG]
[LIST=1]
[*]Extract the Zip-Archive using 7Zip, WinRar, or other tools.
[*]Drag the plugins EisenInventories.jar* and VoxelVert.jar into your plugins/ folder.
[*]Start up your server. This will also generate the default configuration and language files which you can then edit.
[/LIST]
[SIZE=3]* EisenInventories is an API which VoxelVert uses for its chest menus. It's not released as seperate plugin yet but will be in the future. Since 1.12.2 EisenInventories is compiled into VoxelVert instead of being a separate jar.[/SIZE]

[SPOILER="Command Line Tool Installation"]
To use the VoxelVert command line tool, open your system console in the directory in which you extracted your jar-files and run the command:
j[FONT=Courier New]ava -jar VoxelVertConsole.jar <program arguments>[/FONT]
[/SPOILER]


[IMG]https://i.imgur.com/nuWR57M.png[/IMG]
Here you can see the default configuration file of the plugin
[CODE=yaml]# the language file to be used
# file paths are relative to ${plugin_dir}/bukkit_lang
language: en_us.lang

# verbosity settings for regulating when VoxelVert prints debug information
verbosity:
  enable: true
  disable: true
  runtime: true

# settings for the HTTP-server which allows for downloading files from the inventory directly
http:
  # enables or disables the HTTP-server (true|false)
  #
  # default = true
  enable: true

  # specifies the port on which the HTTP-server runs
  #
  # default = 26000
  port: 26000

  # http host with placeholders
  # you can replace $localhost with the domain name of your server if you have one
  # you can omit $port if you are hosting on port 80, as this is the default HTTP port
  # NOTE: you might need to run VoxelVert with administrator permissions to bind to port 1024 and below on Linux)
  # NOTE: you must replace $localhost with your domain to allow Minecraft clients to open links by clicking in-game
  #   EXAMPLE: "my-server.net:$port"
  #   by default, VoxelVert uses http://checkip.amazonaws.com/ to check your server's IP so that you can download and
  #   upload files without a domain
  #
  # $localhost = your public IP-address
  # $port = the port on which your HTTP-server runs
  # default = "$localhost:$port"
  host: "$localhost:$port"

  # download path for file downloads
  #
  # default = "/vv/dl"
  download_path: "/vv/dl"

  # upload path for file uploads
  #
  # default = /vv/up
  upload_path: "/vv/up"[/CODE]


[IMG]https://i.imgur.com/79wcqhV.png[/IMG]
[B]Q: How do I convert files with VoxelVert?[/B]
[SPOILER="Answer"]Take a look at the Screenshots section. There you can see a detailed walkthrough on how to do it in the file browser. Alternatively, check out the documentation of /convert.
[/SPOILER]

[B]Q: How do I convert Minecraft blocks in my world?[/B]
[SPOILER="Answer"]Almost exactly the same way you convert files with VoxelVert.

You must first select an area to convert with WorldEdit. To do so, select an area to convert using the command [B]//pos1[/B] and [B]//pos2[/B]. Alternatively, left/right click blocks with a wooden axe in creative mode to make your selection.

Once you selected an area, open your file browser with [B]/vv[/B]. Your selection will show up in your file browser as a file named [B]#selection[/B].

From there on, follow the guide in the Screenshots section.
[/SPOILER]

[B]Q: How can I upload and download files to and from VoxelVert?[/B]
[SPOILER="Answer"]
[U]Upload[/U]
Use the command /vv upload. VoxelVert will give you a one-time use link. Open this link in your browser and upload your file of choice.
[IMG]https://i.imgur.com/QRyjkZX.png[/IMG]
Note that your file name will be changed in VoxelVert if it contains special characters and spaces.

[U]Download[/U]
Click on a file in your file browser. In the options menu at the bottom, click on share (Enderpearl icon) and then on Download (Minecart icon). Alternatively, you can use [B]/vv-share download <file>[/B]. VoxelVert gives you a one-time use link with which you can download your file. Open this link in your browser.
[/SPOILER]

[B]Q: If people convert really large files with VoxelVert, isn't my server going to lag?[/B]
[SPOILER="Answer"]
Probably not. Many weeks of work went into optimizing and testing VoxelVert. Also, all conversions are happening on a separate converter thread. This means that VoxelVert won't interfere with placing blocks and other important stuff.
[/SPOILER]

[B]Q: Can I convert my blocks with custom resource packs?[/B]
[SPOILER="Answer"]
Yes, although this function is only available in the /convert command right now. You must first convert a resource pack into a database of colors:
[B]/c <texture_pack>.zip <block_color_table>.bct[/B]
This is necessary so that VoxelVert doesn't need to convert your resource pack into a block color lookup table each time you want to convert blocks.

Next, convert a schematic or your selection into voxels with the -c option.
[B]/c #selection <my_voxel_model>.qef -c <block_color_table>.bct[/B]

Full example:[CODE]1. convert resource pack into block color table:
/c bdcraft.zip bdcraft.bct
2. convert world edit selection into QEF file using our block color table:
/c #selection my_build.qef -c bdcraft.bct[/CODE]
[/SPOILER]

[B]Q: I found a bug or VoxelVert doesn't run on my server. Where do I get help? Can I request a refund?[/B]
[SPOILER="Answer"]
You can get help by sending my a private message or using the resource's discussion thread. I will usually answer in a few days at most. A support server on Discord will also be available soon.

Whether you can request a refund depends on the problem you're having with VoxelVert. We distinguish between two different scenarios:

1) If there is a bug or other technical issue with VoxelVert which exists due to the author's fault AND if the author doesn't resolve the issue despite it being reported multiple times because they either can't fix it or refuse to do so, [B]you will receive a refund[/B].

2) If there is compatibility problems with other plugins or VoxelVert doesn't function properly because of your operating system, [B]you can not request a refund[/B]. It is not the plugin author's responsibility to ensure compatibility with non-standard servers (such as servers running custom Spigot versions etc.).
[/SPOILER]
